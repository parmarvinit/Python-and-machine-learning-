# -*- coding: utf-8 -*-
"""Day_4_Assignment.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1nVBZXnmBMOTeJ6G8vr_Y5uV87E1xr79v
"""

from google.colab import files
uploaded = files.upload()

import numpy as np # linear algebra
import pandas as pd # data manipulation and analysis
import matplotlib.pyplot as plt # data visualization
import seaborn as sns # data visualization
sns.set_style('whitegrid') # set style for visualization
import warnings # ignore warnings
warnings.filterwarnings('ignore')

df = pd.read_csv('train.csv')

df.head()



df.info()

df.columns

df.describe()



df.describe(include='O')

list(df.Sex.unique())

df.isnull().sum()

df[df.duplicated(keep='first')]

df.drop_duplicates(keep='first',inplace=True)

plt.figure(figsize=(10,6))
sns.distplot(df.Age,color='r')
plt.title('Age',size=18)
plt.xlabel('Age',size=14)
plt.ylabel('Density',size=14)
plt.show()

plt.figure(figsize=(10,6))
sns.histplot(df.Age)
plt.title('Age Distribution',size=18)
plt.xlabel('Age',size=14)
plt.ylabel('Count',size=14)
plt.show()

...
# summarize the number of rows with missing values for each column
for i in range(df.shape[1]):
 # count number of rows with missing values
 n_miss = df[[i]].isnull().sum()
 perc = n_miss / df.shape[0] * 100
 print('> %d, Missing: %d (%.1f%%)' % (i, n_miss, perc))